name: ci

on:
  push:
    branches: [main, 'release/**', 'task/**', 'feature/**', 'epic/**']
    tags: ['**']
  pull_request:
    branches: [main, 'release/**', 'task/**', 'feature/**', 'epic/**']

jobs:

  older-rebar-builds:
    name: Build on OTP ${{ matrix.otp_version }} w/ rebar ${{ matrix.rebar3-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp_version: [19, 20, 21, 22, 23, 24]
        rebar3-version: ['3.15.2']
        os: [ubuntu-latest]

    container:
      image: erlang:${{ matrix.otp_version }}

    steps:
    - uses: actions/checkout@v2
    - name: Download Recent Rebar
      run: wget https://github.com/erlang/rebar3/releases/download/${{ matrix.rebar3-version }}/rebar3 && chmod 755 ./rebar3
    - name: Update Path
      run: echo "./" >> $GITHUB_PATH
    - name: Check ./rebar3 Version
      run: ./rebar3 --version
    - name: Compile
      run: ./rebar3 compile
    - name: Xref Checks
      run: ./rebar3 xref
    - name: Dialyzer
      run: ./rebar3 dialyzer
    - name: Run Tests
      run: ./rebar3 eunit -v
    - name: Test Coverage
      run: ./rebar3 as test do proper -c, cover -v --min_coverage=0

  newer-rebar-builds:
    name: Build on OTP ${{ matrix.otp_version }} w/ rebar ${{ matrix.rebar3-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp_version: [22, 23, 24]
        rebar3-version: ['3.16.1']
        os: [ubuntu-latest]

    container:
      image: erlang:${{ matrix.otp_version }}

    steps:
    - uses: actions/checkout@v2
    - name: Download Recent Rebar
      run: wget https://github.com/erlang/rebar3/releases/download/${{ matrix.rebar3-version }}/rebar3 && chmod 755 ./rebar3
    - name: Update Path
      run: echo "./" >> $GITHUB_PATH
    - name: Check ./rebar3 Version
      run: ./rebar3 --version
    - name: Compile
      run: ./rebar3 compile
    - name: Xref Checks
      run: ./rebar3 xref
    - name: Dialyzer
      run: ./rebar3 dialyzer
    - name: Run Tests
      run: ./rebar3 eunit -v
    - name: Test Coverage
      run: ./rebar3 as test do proper -c, cover -v --min_coverage=0
